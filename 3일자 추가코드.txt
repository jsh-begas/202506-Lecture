3일자 추가 코드

#(오류 뜨는 예제)
results = []
errors = []

iterable = [1, 2, 'a', 3, 0, 4]  # example values that may cause errors

for item in iterable:
    result = 10 / item
    results.append(result)


print("Results:", results)
print("Errors:", errors)


#(오류를 try block으로 피해가는 예제)
results = []
errors = []

iterable = [1, 2, 'a', 3, 0, 4]  # example values that may cause errors

for item in iterable:
    try:
        # example operation that can fail: division
        result = 10 / item
        results.append(result)
    except Exception:
        errors.append(item)

print("Results:", results)
print("Errors:", errors)


#계산기 (주석추가버전)
def calculator(a,b,operator='+'):
    '''
    계산기입니다.
    항 설명
    a,b : 연산할 숫자
    operator : 연산자
    '''
    if operator=='+':
        value=a+b
    else :
        print("구현되지 않은 사칙연산 기호입니다")
        return None
    
    print(f'a={a}')
    print(f'b={b}')
    return value


#통장 예제
class account():
    def __init__(self):
        self.balance=0
        return None
    def deposit(self, money):
        self.balance = self.balance + money
        print(f'잔액 = {self.balance}입니다')

account1 = account()

account1.deposit(100)

account1.deposit(100)
